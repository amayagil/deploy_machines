---
  - name: Get my list of CVEs
    ansible.builtin.uri:
      url: "{{ insights_api_url }}/vulnerability/v1/systems/{{ insights_inventory_id }}/cves?limit=30"
      method: GET
      user: "{{ insights_auth_user }}"
      password: "{{ insights_auth_password }}"
      validate_certs: no
      force_basic_auth: yes
      status_code: 200
      return_content: yes 
      headers:
        Content-Type: "application/json"
    register: cve_list
    until: "cve_list.status == 200"
    ignore_errors: true
    retries: 40
    delay: 10

  - name: Set result json as fact
    ansible.builtin.set_fact:
      cve_list_data_json: "{{ (cve_list.content | from_json).data }}"

#  - name: Print out cve_list_data_json
#    ansible.builtin.debug:
#      msg: "{{ cve_list_data_json }}"

  - name: Create a list for each cve with a playbook
    ansible.builtin.set_fact:
      cves_with_pb: "{{ cves_with_pb + [{ 'cve_id' : item.id, 
                                          'insights_id' : insights_inventory_id,
                                          'hostname' : dns_name,
                                          'impact' : item.attributes.impact }] }}"
    loop: "{{ cve_list_data_json }}"
    when: item.attributes.remediation == 2

  - name: Generate playbooks to remediate vulnerabilities
    ansible.builtin.uri:
      url: "{{ insights_api_url }}/remediations/v1/playbook"
      method: POST
      user: "{{ insights_auth_user }}"
      password: "{{ insights_auth_password }}"
      validate_certs: no
      force_basic_auth: yes
      status_code: 200
      return_content: yes 
      headers:
        Content-Type: "application/json"
        accept: "text/vnd.yaml"
        Connection: "keep-alive"
      body_format: json
      body: "{{ lookup('ansible.builtin.template','templates/pb_generator_body.j2') }}"
    register: pbs_per_host
    loop: "{{ cves_with_pb }}"

  - name: print out cves_with_pb
    ansible.builtin.debug:
      msg: "{{ item.content }}"
    loop: "{{ pbs_per_host.results }}"

  - name: Insights | Create playbooks locally
    ansible.builtin.copy:
      dest: "{{ playbook_dir }}/{{ item.item.cve_id }}-remediation-{{ item.item.hostname }}.yml"
      content: "{{ item.content }}"
      mode: "0755"
    delegate_to: localhost
    loop: "{{ pbs_per_host.results }}"

  - name: Run remediation playbooks
    ansible.builtin.include_tasks: 
      file: "{{ playbook_dir }}/{{ item.item.cve_id }}-remediation-{{ item.item.hostname }}.yml"
    loop: "{{ pbs_per_host.results }}"

#
#  - name: Kick off a project sync
#    ansible.builtin.uri:
#      url: "https://{{ controller_url }}/api/v2/projects/{{ project_id }}/update/"
#      headers:
#        Authorization: "Bearer {{ new_token.json.token }}"
#        Content-Type: "application/json"
#      validate_certs: no
#      follow_redirects: all
#      return_content: no
#      method: "POST"
#      status_code: 202
#
#  - name: Pausing for 20 seconds to allow for the project sync up to finish
#    ansible.builtin.pause:
#      seconds: 20
#
#  - name: process my playbooks
#    loop: "{{ chg_tkt_list }}"
#    ansible.builtin.include_tasks:
#      file: tasks/launch_playbooks.yml