---
- name: Deploy Azure instance
  hosts: localhost
  gather_facts: false

  # Cada loop itera sobre todas las localizaciones.
  # El filtro file devuelve los contenidos del fichero machines.yml
  # El filtro from_yaml convierte de yaml a un objeto iterable
  vars:
    txt_slack: "{{ type | capitalize  }} instances created in {{ azure_resource_group }}"
    txt_tlg: "{{ type | capitalize }} instances created in {{ azure_resource_group }}"

  tasks:
    - name: ver parámetros
      debug:
        msg: "Nombre de máquina {{ item.name }} tipo OS {{ item.azure_os_type}} instancia {{ item.azure_image_offer }} fichero de definiciones machines_def_{{ type }}.yml"
      loop: "{{ lookup('file', 'machines_def_' + type + '.yml') | from_yaml }}"

    - name: Deploy Azure instance
      vars:
        type: "azure"
        instance_name: "{{ item.name }}"
        instance_flavor: "Standard_D2s_v3"
        # Azure resource group name
        # override this value if you use Azure Open Environment credentials from RHPDS
        azure_resource_group: "{{ instance_name }}"
        azure_private_network: "{{ azure_resource_group }}"
        # public key to inject into the Linux instance for SSH
        azure_os_type: "{{ item.azure_os_type}}"
        azure_image_offer: "{{ item.azure_image_offer }}"
        azure_image_publisher: "{{ item.azure_image_publisher }}"
        azure_image_sku: "{{ item.azure_image_sku }}"
        azure_ssh_public_key: '{{ lookup("file","/tmp/id_rsa.pub") }}'
        windows_admin_password: "{{ item.windows_admin_password }}"
      ansible.builtin.include_role:
        name: ansible_ssa.general.instance
      loop: "{{ lookup('file', 'machines_def_' + type + '.yml') | from_yaml }}"
        
    - name: Invocar Notificator
      vars:
        txt_slack: "{{ type | capitalize  }} instances created in {{ instance_name }}"
        txt_tlg: "{{ type | capitalize }} instances created in {{ instance_name }}"
      ansible.builtin.include_tasks: notificator_tasks.yml