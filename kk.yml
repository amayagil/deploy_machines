---
- name: ver cosas
  hosts: localhost
  gather_facts: false

  vars:
    url_puestos: "https://ips.redsara.es/IPSC/secure/buscarConvocatorias"
    job_list: ""
    fichero_datos: "/tmp/data.html"
    file_info: ""
  
  tasks:
  # - name: verlas
  #   debug:
  #     var: hostvars[inventory_hostname].public_ip_name

  - name: Get the data of registered host
    ansible.builtin.uri:
      url: "{{ url_puestos }}"
      method: GET
      validate_certs: no
      force_basic_auth: yes
      status_code: 200
      return_content: yes 
      headers:
        Content-Type: "body_format"
    register: html_page
    ignore_errors: true

  - name: obtener lineas de tabla
    set_fact:
      result: "{{ html_page.content.splitlines(True) | select('match', '^.*<\\s*\/?(td|table|tr|tbody|thead|th)\\b.*') | regex_replace('(\\s\\s)+', '') | replace('\\t','') }}" 

  - name: obtener puestos A1 sólo
    set_fact:
      aunos: "{{ result | select('search', '>([^<]*A1-[^<]*)<') | list }}"

  - name: Ver contenido final                                                                                                                                                                         
    debug:                                                                                                                                                                         
      var: aunos | join()

  - name: Obtener información del fichero
    stat:
      path: "{{ fichero_datos }}"
    register: file_info

  - name: crear el fichero si no existe previamente
    ansible.builtin.file:  
      path: "{{ fichero_datos }}"
      state: touch
      mode: u=rw,g=r,o=r
    register: file_info
    when: 
      file_info.stat.exists == false

  # - name: ver contenido fichero por líneas
  #   ansible.builtin.debug:
  #     msg="{{ item }}"
  #   loop: "{{ lookup('file', '{{ fichero_datos }}' ).splitlines() }}"

  - name: guardar en fichero
    ansible.builtin.copy:
      content: "{{ result | join() }}"
      dest: "{{ fichero_datos }}"
    when: lookup('file', fichero_datos, default='') != ( result | join() )
    notify: notificarme

  handlers:
    - name: notificarme
      include_tasks:
        notificator_tasks.yml
      vars:
        msg_slack: "Nuevas convocatorias de funcionario, ve a {{ url_puestos }}"
        msg_tlg: "Nuevas convocatorias de funcionario, ve a {{ url_puestos }}"
      when: lookup('file', fichero_datos, default='') != ( result | join() )